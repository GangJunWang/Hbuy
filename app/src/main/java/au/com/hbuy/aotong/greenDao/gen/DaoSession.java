package au.com.hbuy.aotong.greenDao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import au.com.hbuy.aotong.greenDao.BuyDbBean;
import au.com.hbuy.aotong.greenDao.Inform;
import au.com.hbuy.aotong.greenDao.Message;
import au.com.hbuy.aotong.greenDao.WaitPayBean;

import au.com.hbuy.aotong.greenDao.gen.BuyDbBeanDao;
import au.com.hbuy.aotong.greenDao.gen.InformDao;
import au.com.hbuy.aotong.greenDao.gen.MessageDao;
import au.com.hbuy.aotong.greenDao.gen.WaitPayBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig buyDbBeanDaoConfig;
    private final DaoConfig informDaoConfig;
    private final DaoConfig messageDaoConfig;
    private final DaoConfig waitPayBeanDaoConfig;

    private final BuyDbBeanDao buyDbBeanDao;
    private final InformDao informDao;
    private final MessageDao messageDao;
    private final WaitPayBeanDao waitPayBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        buyDbBeanDaoConfig = daoConfigMap.get(BuyDbBeanDao.class).clone();
        buyDbBeanDaoConfig.initIdentityScope(type);

        informDaoConfig = daoConfigMap.get(InformDao.class).clone();
        informDaoConfig.initIdentityScope(type);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        waitPayBeanDaoConfig = daoConfigMap.get(WaitPayBeanDao.class).clone();
        waitPayBeanDaoConfig.initIdentityScope(type);

        buyDbBeanDao = new BuyDbBeanDao(buyDbBeanDaoConfig, this);
        informDao = new InformDao(informDaoConfig, this);
        messageDao = new MessageDao(messageDaoConfig, this);
        waitPayBeanDao = new WaitPayBeanDao(waitPayBeanDaoConfig, this);

        registerDao(BuyDbBean.class, buyDbBeanDao);
        registerDao(Inform.class, informDao);
        registerDao(Message.class, messageDao);
        registerDao(WaitPayBean.class, waitPayBeanDao);
    }
    
    public void clear() {
        buyDbBeanDaoConfig.getIdentityScope().clear();
        informDaoConfig.getIdentityScope().clear();
        messageDaoConfig.getIdentityScope().clear();
        waitPayBeanDaoConfig.getIdentityScope().clear();
    }

    public BuyDbBeanDao getBuyDbBeanDao() {
        return buyDbBeanDao;
    }

    public InformDao getInformDao() {
        return informDao;
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public WaitPayBeanDao getWaitPayBeanDao() {
        return waitPayBeanDao;
    }

}
